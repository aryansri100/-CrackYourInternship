/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
   private:
   bool solve(TreeNode* sub1,TreeNode* sub2)
   {
    if(sub1==NULL&&sub2==NULL)
    return true;
    if(sub1!=NULL&&sub2==NULL||sub1==NULL&&sub2!=NULL)
    {
        return false;
    }
    if(sub1->val==sub2->val)
    {
        bool s1=solve(sub1->left,sub2->right);
        bool s2=solve(sub1->right,sub2->left);
        return s1&&s2;
    }
    else
    {
        return false;
    }
   }
   
public:
    bool isSymmetric(TreeNode* root) {
     return solve(root->left,root->right);
    }
};
